// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  email    String @unique
  profile  String @default("/default-profile.jpg")
}

model Folder {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  created_at   DateTime       @default(now())
  Files        File[]
  SharedFolder SharedFolder[]
}

model File {
  id         Int          @id @default(autoincrement())
  name       String
  size       Int
  uploadTime DateTime     @default(now())
  folder     Folder?      @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId   Int?
  path       String
  SharedFile SharedFile[]
}

model SharedFolder {
  id         Int      @id @default(autoincrement())
  folder     Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId   Int
  shareLink  String
  expiry     DateTime
  created_at DateTime @default(now())
}

model SharedFile {
  id         Int      @id @default(autoincrement())
  file       File     @relation(fields: [fileId], references: [id], onDelete: Cascade)
  fileId     Int
  shareLink  String
  expiry     DateTime
  created_at DateTime @default(now())
}
