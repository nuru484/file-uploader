// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  password     String
  email        String         @unique
  Folder       Folder[]
  SharedFolder SharedFolder[]
}

model Folder {
  id           Int            @id @default(autoincrement())
  name         String
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  created_at   DateTime       @default(now())
  Files        File[]
  SharedFolder SharedFolder[]
}

model File {
  id         Int      @id @default(autoincrement())
  name       String
  size       Int
  uploadTime DateTime @default(now())
  folder     Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId   Int
  path       String
}

model SharedFolder {
  id             Int      @id @default(autoincrement())
  folder         Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId       Int
  shared_by_user User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         Int
  shareLink      String
  expiry         DateTime
  created_at     DateTime @default(now())
}
